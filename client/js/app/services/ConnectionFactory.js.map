{"version":3,"file":"ConnectionFactory.js","names":["event","version","oldVersion","dbConnection","target","result","stores","_classStaticPrivateFieldSpecGet","ConnectionFactory","_migrations","_iterator","_createForOfIteratorHelper","_step","s","n","done","store","value","createObjectStore","autoIncrement","err","e","f","setters","execute","_export","_classCallCheck","Error","_createClass","key","getConnection","_this","Promise","resolve","reject","_dbConnection","_currentVersion","dbName","_dbName","request","window","indexedDB","open","onupgradeneeded","_classStaticPrivateMethodGet","_onUpgradeIfIsVesion","call","onsuccess","_classStaticPrivateFieldSpecSet","_close","close","bind","onerror","error","console","name","closeConnection","_class","writable","_defineProperty"],"sources":["../../app-es6/services/ConnectionFactory.js"],"sourcesContent":["export class ConnectionFactory {\n  constructor() {\n    throw new Error('Não é possível criar instâncias de ConnectionFactory');\n  }\n\n  static #currentVersion = 1;\n  static #dbName = 'aluraframe';\n  static #dbConnection = null;\n  static #close = null;\n\n  static #migrations = {\n    [ConnectionFactory.#currentVersion]: ['negociacoes'],\n  };\n\n  static getConnection() {\n    return new Promise((resolve, reject) => {\n      if (ConnectionFactory.#dbConnection) {\n        resolve(ConnectionFactory.#dbConnection);\n        return;\n      }\n\n      const version = ConnectionFactory.#currentVersion;\n      const dbName = ConnectionFactory.#dbName;\n      const request = window.indexedDB.open(dbName, version);\n\n      request.onupgradeneeded = (event) => {\n        this.#onUpgradeIfIsVesion1(event);\n      };\n\n      request.onsuccess = () => {\n        const dbConnection = request.result;\n        ConnectionFactory.#dbConnection = dbConnection;\n        ConnectionFactory.#close = dbConnection.close.bind(dbConnection);\n        dbConnection.close = null;\n        resolve(dbConnection);\n      };\n\n      request.onerror = () => {\n        const error = request.error;\n        console.error(error);\n        reject(error.name);\n      };\n    });\n  }\n\n  static #onUpgradeIfIsVesion1(event) {\n    const version = 1;\n    if (event.oldVersion < version) {\n      const dbConnection = event.target.result;\n      const stores = ConnectionFactory.#migrations[version];\n      for (const store of stores) {\n        dbConnection.createObjectStore(store, { autoIncrement: true });\n      }\n    }\n  }\n\n  static closeConnection() {\n    if (ConnectionFactory.#close) {\n      ConnectionFactory.#close();\n      ConnectionFactory.#dbConnection = null;\n      ConnectionFactory.#close = null;\n    }\n  }\n}\n"],"mappings":"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"}